/*
    overviewJaCaMo
    ---------------------------

    JaCaMo Application File

    This file defines the initial state of the MAS (initial agents, environment, organization, ...)

    (see jacamo/doc/jcm.html for more information about what can be defined in this file)

    JaCaMo 1.0
    November 29, 2021 - 11:41:33
*/

mas overviewJaCaMo {

    //------ First example ------//
    
    agent francois : helloAgentTypes/hello.asl {
    	beliefs: message("Bonjour")
    }
    
    agent maria : helloAgentTypes/hello.asl {
    	beliefs: message("Bom dia")
    }
    
    agent giacomo : helloAgentTypes/hello.asl {
    	beliefs: message("Buongiorno")
    }
    
    //what is going to happen in this case?
    agent nonBeliever : helloAgentTypes/hello.asl
    
    
    //------ Second example ------//
    
    /*agent francois : helloAgentTypes/helloFromCountry.asl {
    	beliefs: country(fr)
    }
    
    agent maria : helloAgentTypes/helloFromCountry.asl {
    	beliefs: country(br)
    }
    
    agent giacomo : helloAgentTypes/helloFromCountry.asl {
    	beliefs: country(it)
    }
    
    agent nonBeliever : helloAgentTypes/helloFromCountry.asl {
    	beliefs: country(none)
    }*/
    
    
    //------ Third example ------//
    
    //in order to make an agent know about an artifact in the workspace,
    //it has to focus on it, using the instruction focus: workspaceName.artifactName
	/*agent francois : helloAgentTypes/helloByGUI.asl {
    	beliefs: message("Bonjour")
    	focus: jacamo.gui
    }
    
    agent maria : helloAgentTypes/helloByGUI.asl {
    	beliefs: message("Bom dia")
    	focus: jacamo.gui
    }
    
    agent giacomo : helloAgentTypes/helloByGUI.asl {
    	beliefs: message("Buongiorno")
    	focus: jacamo.gui
    }
    
    agent nonBeliever : helloAgentTypes/helloByGUI.asl {
    	focus: jacamo.gui
    }
    
     workspace jacamo {
     	//create an instance of the display artifact (it is implemented in the folder src/env/display) and name it gui
     	//place it in a workspace called jacamo
        artifact gui: display.GUIConsole("common")
    }*/
    
    
	//------ Fourth example ------//

	/*agent francois : helloAgentTypes/helloByGUI.asl {
    	beliefs: message("Bonjour")
    	focus: france.gui
    	//what is going to happen? (non-deterministic)
    	//focus: italy.gui
    }
    
    agent maria : helloAgentTypes/helloByGUI.asl {
    	beliefs: message("Bom dia")
    	focus: brazil.gui
    }
    
    agent giacomo : helloAgentTypes/helloByGUI.asl {
    	beliefs: message("Buongiorno")
    	focus: italy.gui
    }
       
    //we can create more than one workspace (with different names)
    //the artifacts name in different workspaces can be repeated
    workspace france {
        artifact gui: display.GUIConsole("France")
    }
    
    workspace italy {
        artifact gui: display.GUIConsole("Italy")
    }
    
    workspace brazil {
        artifact gui: display.GUIConsole("Brazil")
    }*/
    
    
    //------ Fifth example ------//
    
    //check helloInAWorkspace.asl and helloInAllWorkspaces.asl here
	/*agent francois : helloAgentTypes/helloInAllWorkspaces.asl {
    	beliefs: message("Bonjour")
    	focus: france.gui
    	focus: italy.gui
    }
    
    agent maria : helloAgentTypes/helloByGUI.asl {
    	beliefs: message("Bom dia")
    	focus: brazil.gui
    }
    
    agent giacomo : helloAgentTypes/helloByGUI.asl {
    	beliefs: message("Buongiorno")
    	focus: italy.gui
    }
    
     workspace france {
        artifact gui: display.GUIConsole("France")
    }
    workspace italy {
        artifact gui: display.GUIConsole("Italy")
    }
    workspace brazil {
        artifact gui: display.GUIConsole("Brazil")
    }*/
    
    
    //------ Sixth example ------//
    
    /*agent francois : helloAgentTypes/helloCooperative.asl {
    	focus: jacamo.gui
    }
    agent maria : helloAgentTypes/helloCooperative.asl {
    	focus: jacamo.gui
    }
    agent giacomo : helloAgentTypes/helloCooperative.asl {
    	focus: jacamo.gui
    }
    agent alice : helloAgentTypes/helloCooperative.asl {
    	focus: jacamo.gui
    }

    workspace jacamo {
    	artifact gui: display.GUIConsole("common")
    }
    
     organisation hello_org: orgHelloWorld.xml {    // the organisational entity is hello_org from spec orgHelloWorld.xml (located in src/org)
    	group jacamo_team: team {                   // instance group (jacamo_team) from spec team
    		responsible-for: hello_eng	            // that will be responsible for the execution of scheme hello_sch (defined below)
    		players: francois rv,                   // the roles of the agents in this group
    		         maria    rl,
    		         giacomo  rc,
    		         alice    rs
    	}
    	scheme hello_eng: hello_sch                // instance scheme (hello_eng) from spec hello_sch
    }*/

}

